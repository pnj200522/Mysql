## CONCAT 함수(문자열 합치기, || )

SELECT ENAME, EMPNO, SAL, DEPTNO
, ENAME||EMPNO||SAL||DEPTNO AL1
, CONCAT(ENAME, EMPNO, SAL, DEPTNO)
FROM EMP;                                   //CONCAT함수는 문자열 합치기 함수, 파라미터를 2개를 받는다.

따라서 위와 같이 사용하면 안됨.

SELECT ENAME, EMPNO, SAL, DEPTNO
, ENAME||EMPNO||SAL||DEPTNO AL1
, CONCAT(CONCAT(CONCAT(ENAME,EMPNO),SAL),DEPTNO)
FROM EMP;

이렇게 작성해야 함.

-----------------------------------------------------------------------------------------------------

## CONCAT이 오류나는 경우.

SELECT CONCAT('', EMPNO)    //아무것도 아님. 오류도 아님
--CONCAT(' ', EMPNO)        //앞에 공백을 포함시킴.
--CONCAT(NULL, EMPNO)       //아무것도 아님. 오류도 아님
--CONCAT(, EMPNO)           //오류
FROM EMP;
      
      
-----------------------------------------------------------------------------------------------------

## SUBSTR 함수

SELECT 'SQL IS SO FUN'
, SUBSTR('SQL IS SO FUN', 8, 4)
FROM DUAL;                                                  //8은 앞쪽부터 공백포함 8번째, 4는 8번째부터 오른쪽으로 4번가기

SELECT 'SQL IS SO FUN'
, SUBSTR(123456789, -3, 2)                                  //-3은 뒤에서 3번째, 2는 뒤에서 3번째부터 오른쪽으로 2번가기(음수면 왼쪽으로)

-----------------------------------------------------------------------------------------------------

## LENGTH 함수

SELECT ENAME, LENGTH(ENAME), HIREDATE, LENGTH(HIREDATE), SAL, LENGTH(SAL)
FROM EMP;                                                                   //LENGTH()는 파라미터 값의 길이,공백포함. NULL은 NULL

-----------------------------------------------------------------------------------------------------

## INSTR 함수

SELECT ENAME, INSTR(ENAME, 'S'), INSTR(ENAME, 's') FROM EMP;                //INSTR(ENAME, 'S')은 ENAME의 값에서 S가 몇번째 있는지 (대문자, 소문자 구분)

-----------------------------------------------------------------------------------------------------

## LPAD 함수

SELECT LPAD('Page 1', 15, '-*-') FROM DUAL;                                 //LPAD('Page 1', 15, '-*-') Page 1에서 1이 15번째 되도록 왼쪽부터 -*-삽입
